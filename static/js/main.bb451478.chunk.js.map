{"version":3,"sources":["Header.js","Blog.js","BlogDetail.js","App.js","serviceWorker.js","index.js"],"names":["Header","React","useState","isShow","setShow","searchValue","setSearchValue","pathname","useLocation","className","href","onClick","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","indexOf","tabIndex","aria-disabled","onSubmit","event","preventDefault","fetch","then","res","json","search","value","alert","catch","err","console","log","placeholder","onChange","target","ArticleCard","props","categoryName","title","postedAt","summary","imageUrl","width","height","src","alt","Blog","state","data","isLoading","error","setState","message","this","map","article","index","key","Component","DetailBlog","articleId","match","params","App","path","component","BlogDetail","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bb451478.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nfunction Header() {\n  const [isShow, setShow] = React.useState(false);\n  const [searchValue, setSearchValue] = React.useState(\"\");\n  const { pathname } = useLocation();\n\n  const onClickBurgerButton = function() {\n    setShow(!isShow);\n  };\n\n  const onChangeSearchInput = function(event) {\n    const value = event.target.value;\n    setSearchValue(value);\n  };\n\n  const onClickSearchButton = function(event) {\n    event.preventDefault();\n    // Send search request to API using fetch\n    // https://developer.mozilla.org/id/docs/Web/API/Fetch_API/Using_Fetch\n    fetch(\"/api/search/?searchValue=\" + searchValue)\n      .then(res => res.json())\n      .then(json => json.search)\n      .then(value => alert(value))\n      .catch(err => console.log(err));\n  };\n\n  return (\n    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark mb-4\">\n      <a className=\"navbar-brand\" href=\"#!\">\n        Top navbar\n      </a>\n      <button\n        onClick={onClickBurgerButton}\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarCollapse\"\n        aria-controls=\"navbarCollapse\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div\n        className={`collapse navbar-collapse ${isShow ? \"show\" : \"\"}`}\n        id=\"navbarCollapse\"\n      >\n        <ul className=\"navbar-nav mr-auto\">\n          <li className={`nav-item ${pathname === \"/\" ? \"active\" : \"\"}`}>\n            <Link className=\"nav-link\" to=\"/\">\n              Home <span className=\"sr-only\">(current)</span>\n            </Link>\n          </li>\n          <li\n            className={`nav-item ${\n              pathname.indexOf(\"/blog\") > -1 ? \"active\" : \"\"\n            }`}\n          >\n            <Link className=\"nav-link\" to=\"/blog\">\n              Blog\n            </Link>\n          </li>\n          <li\n            className={`nav-item ${\n              pathname.indexOf(\"/about\") > -1 ? \"active\" : \"\"\n            }`}\n          >\n            <Link className=\"nav-link\" to=\"/about\">\n              About\n            </Link>\n          </li>\n          <li className={`nav-item ${pathname === \"/#!\" ? \"active\" : \"\"}`}>\n            <a\n              className=\"nav-link disabled\"\n              href=\"#!\"\n              tabIndex=\"-1\"\n              aria-disabled=\"true\"\n            >\n              Disabled\n            </a>\n          </li>\n        </ul>\n        <form\n          className=\"form-inline mt-2 mt-md-0\"\n          onSubmit={onClickSearchButton}\n        >\n          <input\n            className=\"form-control mr-sm-2\"\n            type=\"text\"\n            placeholder=\"Search\"\n            aria-label=\"Search\"\n            onChange={onChangeSearchInput}\n            value={searchValue}\n          />\n          <button\n            className=\"btn btn-outline-success my-2 my-sm-0\"\n            type=\"submit\"\n          >\n            Search\n          </button>\n        </form>\n      </div>\n    </nav>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport {\n  Link\n} from \"react-router-dom\";\n\nfunction ArticleCard(props) {\n  const { id, categoryName, title, postedAt, summary, imageUrl } = props;\n  return (\n    <div className=\"row no-gutters border rounded overflow-hidden flex-md-row mb-4 shadow-sm h-md-250 position-relative\">\n      <div className=\"col p-4 d-flex flex-column position-static\">\n        <strong className=\"d-inline-block mb-2 text-primary\">\n          {categoryName}\n        </strong>\n        <h3 className=\"mb-0\">{title}</h3>\n        <div className=\"mb-1 text-muted\">{postedAt}</div>\n        <p className=\"card-text mb-auto\">{summary}</p>\n        <Link to={\"/blog/\"+ id} className=\"stretched-link\">\n          Continue reading\n        </Link>\n      </div>\n      <div className=\"col-auto d-none d-lg-block\">\n        <img\n          className=\"bd-placeholder-img\"\n          width=\"200\"\n          height=\"250\"\n          aria-label=\"Placeholder: Thumbnail\"\n          src={imageUrl}\n          alt={title}\n        />\n      </div>\n    </div>\n  );\n}\n\nclass Blog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      isLoading: true,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"/api/blog\")\n      .then(res => res.json())\n      .then(json =>\n        this.setState({\n          data: json.data,\n          isLoading: false,\n          error: null\n        })\n      )\n      .catch(err => {\n        this.setState({\n          data: [],\n          isLoading: false,\n          error: err.message\n        });\n      });\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return \"Loading...\";\n    }\n\n    if (this.state.error !== null) {\n      return this.state.error;\n    }\n\n    return (\n      <div className=\"row mb-2\">\n        {this.state.data.map((article, index) => (\n          <div className=\"col-md-6\" key={index}>\n            <ArticleCard\n              id={article.id}\n              categoryName = {article.categoryName}\n              title = {article.title}\n              postedAt = {article.postedAt}\n              summary = {article.summary}\n              imageUrl = {article.imageUrl}\n            />\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\nexport default Blog;\n","import React from \"react\";\n\nfunction ArticleCard(props) {\n  const  {title, summary, imageUrl}  = props;\n  return (\n    <div className=\"col-lg-8\">\n      <h1 className=\"mt-4\">title</h1>\n\n      <img className=\"img-fluid rounded\" src={imageUrl} alt={title} />\n\n      <hr />\n\n      <p className=\"lead\">{summary}</p>\n      <blockquote className=\"blockquote\">\n        <p className=\"mb-0\">\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer\n          posuere erat a ante.\n        </p>\n        <footer className=\"blockquote-footer\">\n          Someone famous in\n          <cite title=\"Source Title\">Source Title</cite>\n        </footer>\n      </blockquote>\n\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Error,\n        nostrum, aliquid, animi, ut quas placeat totam sunt tempora commodi\n        nihil ullam alias modi dicta saepe minima ab quo voluptatem obcaecati?\n      </p>\n\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Harum, dolor\n        quis. Sunt, ut, explicabo, aliquam tenetur ratione tempore quidem\n        voluptates cupiditate voluptas illo saepe quaerat numquam recusandae?\n        Qui, necessitatibus, est!\n      </p>\n\n      <hr />\n    </div>\n  );\n}\n\nclass DetailBlog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      isLoading: true,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    const { articleId } = this.props.match.params;\n    fetch(\"/api/blog/\" + articleId)\n      .then(res => res.json())\n      .then(json =>\n        this.setState({\n          data: json.data,\n          isLoading: false,\n          error: null\n        })\n      )\n      .catch(err => {\n        this.setState({\n          data: [],\n          isLoading: false,\n          error: err.message\n        });\n      });\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return \"Loading...\";\n    }\n\n    if (this.state.error !== null) {\n      return this.state.error;\n    }\n\n    const article = this.state.data || {};\n\n    return (\n      <div className=\"row mb-2\">\n        <div className=\"col-md-6\">\n          <ArticleCard\n            title={article.title}\n            summary={article.summary}\n            imageUrl={article.imageUrl}\n          />\n        </div>\n      </div>\n    );\n  }\n}\nexport default DetailBlog;\n","//Nama : Wisnton Wiradi Pangestu\n//NIM : 18/432187/SV/16123\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Blog from \"./Blog\";\nimport BlogDetail from \"./BlogDetail\";\nimport React, { Component }  from 'react';\n//install bootstrap dulu\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Ini merupakan functional component\n// https://getbootstrap.com/docs/4.4/examples/navbar-static/\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route path=\"/about\">\n            About\n          </Route>\n          <Route path=\"/blog/:articleId\" component={BlogDetail} />\n          <Route path=\"/blog\">\n            <Blog />\n          </Route>\n          <Route path=\"/\">\n            Home\n          </Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}